// Code generated by protoc-gen-go. DO NOT EDIT.
// source: application.proto

package application

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestBody struct {
	Language             string   `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestBody) Reset()         { *m = RequestBody{} }
func (m *RequestBody) String() string { return proto.CompactTextString(m) }
func (*RequestBody) ProtoMessage()    {}
func (*RequestBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc846aced8fe6ea6, []int{0}
}

func (m *RequestBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestBody.Unmarshal(m, b)
}
func (m *RequestBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestBody.Marshal(b, m, deterministic)
}
func (m *RequestBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestBody.Merge(m, src)
}
func (m *RequestBody) XXX_Size() int {
	return xxx_messageInfo_RequestBody.Size(m)
}
func (m *RequestBody) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestBody.DiscardUnknown(m)
}

var xxx_messageInfo_RequestBody proto.InternalMessageInfo

func (m *RequestBody) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *RequestBody) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *RequestBody) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ResponseBody struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseBody) Reset()         { *m = ResponseBody{} }
func (m *ResponseBody) String() string { return proto.CompactTextString(m) }
func (*ResponseBody) ProtoMessage()    {}
func (*ResponseBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc846aced8fe6ea6, []int{1}
}

func (m *ResponseBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseBody.Unmarshal(m, b)
}
func (m *ResponseBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseBody.Marshal(b, m, deterministic)
}
func (m *ResponseBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseBody.Merge(m, src)
}
func (m *ResponseBody) XXX_Size() int {
	return xxx_messageInfo_ResponseBody.Size(m)
}
func (m *ResponseBody) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseBody.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseBody proto.InternalMessageInfo

func (m *ResponseBody) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type NameHolder struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NameHolder) Reset()         { *m = NameHolder{} }
func (m *NameHolder) String() string { return proto.CompactTextString(m) }
func (*NameHolder) ProtoMessage()    {}
func (*NameHolder) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc846aced8fe6ea6, []int{2}
}

func (m *NameHolder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameHolder.Unmarshal(m, b)
}
func (m *NameHolder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameHolder.Marshal(b, m, deterministic)
}
func (m *NameHolder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameHolder.Merge(m, src)
}
func (m *NameHolder) XXX_Size() int {
	return xxx_messageInfo_NameHolder.Size(m)
}
func (m *NameHolder) XXX_DiscardUnknown() {
	xxx_messageInfo_NameHolder.DiscardUnknown(m)
}

var xxx_messageInfo_NameHolder proto.InternalMessageInfo

func (m *NameHolder) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeletionResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletionResponse) Reset()         { *m = DeletionResponse{} }
func (m *DeletionResponse) String() string { return proto.CompactTextString(m) }
func (*DeletionResponse) ProtoMessage()    {}
func (*DeletionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc846aced8fe6ea6, []int{3}
}

func (m *DeletionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletionResponse.Unmarshal(m, b)
}
func (m *DeletionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletionResponse.Marshal(b, m, deterministic)
}
func (m *DeletionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletionResponse.Merge(m, src)
}
func (m *DeletionResponse) XXX_Size() int {
	return xxx_messageInfo_DeletionResponse.Size(m)
}
func (m *DeletionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeletionResponse proto.InternalMessageInfo

func (m *DeletionResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type LogRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tail                 string   `protobuf:"bytes,2,opt,name=tail,proto3" json:"tail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogRequest) Reset()         { *m = LogRequest{} }
func (m *LogRequest) String() string { return proto.CompactTextString(m) }
func (*LogRequest) ProtoMessage()    {}
func (*LogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc846aced8fe6ea6, []int{4}
}

func (m *LogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogRequest.Unmarshal(m, b)
}
func (m *LogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogRequest.Marshal(b, m, deterministic)
}
func (m *LogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogRequest.Merge(m, src)
}
func (m *LogRequest) XXX_Size() int {
	return xxx_messageInfo_LogRequest.Size(m)
}
func (m *LogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogRequest proto.InternalMessageInfo

func (m *LogRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LogRequest) GetTail() string {
	if m != nil {
		return m.Tail
	}
	return ""
}

type LogResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Data                 []string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogResponse) Reset()         { *m = LogResponse{} }
func (m *LogResponse) String() string { return proto.CompactTextString(m) }
func (*LogResponse) ProtoMessage()    {}
func (*LogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc846aced8fe6ea6, []int{5}
}

func (m *LogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogResponse.Unmarshal(m, b)
}
func (m *LogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogResponse.Marshal(b, m, deterministic)
}
func (m *LogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogResponse.Merge(m, src)
}
func (m *LogResponse) XXX_Size() int {
	return xxx_messageInfo_LogResponse.Size(m)
}
func (m *LogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogResponse proto.InternalMessageInfo

func (m *LogResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *LogResponse) GetData() []string {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*RequestBody)(nil), "application.RequestBody")
	proto.RegisterType((*ResponseBody)(nil), "application.ResponseBody")
	proto.RegisterType((*NameHolder)(nil), "application.NameHolder")
	proto.RegisterType((*DeletionResponse)(nil), "application.DeletionResponse")
	proto.RegisterType((*LogRequest)(nil), "application.LogRequest")
	proto.RegisterType((*LogResponse)(nil), "application.LogResponse")
}

func init() { proto.RegisterFile("application.proto", fileDescriptor_fc846aced8fe6ea6) }

var fileDescriptor_fc846aced8fe6ea6 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xcb, 0x4e, 0xc3, 0x30,
	0x10, 0x6c, 0x5a, 0xe8, 0x63, 0xdb, 0x03, 0xac, 0x90, 0x30, 0x91, 0x90, 0x22, 0x9f, 0x7a, 0x40,
	0x3d, 0x00, 0x37, 0x0e, 0x85, 0x82, 0x2a, 0x0e, 0x15, 0x07, 0xf3, 0x05, 0x6e, 0xb2, 0x0a, 0x91,
	0xdc, 0x38, 0xc4, 0x8e, 0x50, 0xff, 0x85, 0x8f, 0x45, 0x71, 0x9b, 0x26, 0x2d, 0xaf, 0xdb, 0xac,
	0x67, 0x76, 0x32, 0x3b, 0x0a, 0x9c, 0xca, 0x2c, 0x53, 0x49, 0x28, 0x6d, 0xa2, 0xd3, 0x49, 0x96,
	0x6b, 0xab, 0x71, 0xd8, 0x78, 0xe2, 0xaf, 0x30, 0x14, 0xf4, 0x5e, 0x90, 0xb1, 0x33, 0x1d, 0xad,
	0xd1, 0x87, 0xbe, 0x92, 0x69, 0x5c, 0xc8, 0x98, 0x98, 0x17, 0x78, 0xe3, 0x81, 0xd8, 0xcd, 0x78,
	0x06, 0xc7, 0xfa, 0x23, 0xa5, 0x9c, 0xb5, 0x1d, 0xb1, 0x19, 0x10, 0xe1, 0x28, 0x92, 0x56, 0xb2,
	0x4e, 0xe0, 0x8d, 0x47, 0xc2, 0x61, 0xce, 0x61, 0x24, 0xc8, 0x64, 0x3a, 0x35, 0xe4, 0x5c, 0x2b,
	0x8d, 0xd7, 0xd0, 0x04, 0x00, 0x2f, 0x72, 0x45, 0xcf, 0x5a, 0x45, 0x1b, 0x97, 0x54, 0xae, 0xaa,
	0x6f, 0x3a, 0xcc, 0xaf, 0xe0, 0xe4, 0x89, 0x14, 0x95, 0x31, 0x2b, 0x37, 0x64, 0xd0, 0x33, 0x45,
	0x18, 0x92, 0x31, 0x4e, 0xda, 0x17, 0xd5, 0xc8, 0x6f, 0x01, 0x16, 0x3a, 0xde, 0xde, 0xf2, 0x93,
	0x5f, 0xf9, 0x66, 0x65, 0xa2, 0xb6, 0xf1, 0x1d, 0xe6, 0x77, 0x30, 0x74, 0x5b, 0xff, 0xd9, 0xef,
	0x4e, 0x68, 0x07, 0x9d, 0x72, 0xb9, 0xc4, 0xd7, 0x9f, 0x6d, 0xc0, 0x87, 0xba, 0xcb, 0xb9, 0x0c,
	0xad, 0xce, 0xd7, 0x38, 0x85, 0xee, 0x63, 0x4e, 0xd2, 0x12, 0xb2, 0x49, 0xb3, 0xfd, 0x46, 0xcf,
	0xfe, 0xc5, 0x01, 0x53, 0x97, 0xc5, 0x5b, 0x38, 0x83, 0xae, 0x3b, 0x9c, 0xf0, 0x7c, 0x4f, 0x56,
	0xf7, 0xe5, 0x5f, 0xee, 0x11, 0x87, 0x35, 0xf1, 0x16, 0x4e, 0xa1, 0x27, 0x68, 0x59, 0x24, 0x2a,
	0xfa, 0xdd, 0xe4, 0xcf, 0x10, 0xf7, 0x30, 0x98, 0x93, 0x0d, 0xdf, 0x16, 0x3a, 0x36, 0x07, 0x16,
	0x75, 0xcf, 0x3e, 0xfb, 0x4e, 0x54, 0x11, 0x96, 0x5d, 0xf7, 0xbb, 0xdd, 0x7c, 0x05, 0x00, 0x00,
	0xff, 0xff, 0xd0, 0x7b, 0xe0, 0x62, 0x83, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApplicationFactoryClient is the client API for ApplicationFactory service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApplicationFactoryClient interface {
	Create(ctx context.Context, in *RequestBody, opts ...grpc.CallOption) (*ResponseBody, error)
	Delete(ctx context.Context, in *NameHolder, opts ...grpc.CallOption) (*DeletionResponse, error)
	Rebuild(ctx context.Context, in *NameHolder, opts ...grpc.CallOption) (*ResponseBody, error)
	FetchLogs(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (*LogResponse, error)
}

type applicationFactoryClient struct {
	cc *grpc.ClientConn
}

func NewApplicationFactoryClient(cc *grpc.ClientConn) ApplicationFactoryClient {
	return &applicationFactoryClient{cc}
}

func (c *applicationFactoryClient) Create(ctx context.Context, in *RequestBody, opts ...grpc.CallOption) (*ResponseBody, error) {
	out := new(ResponseBody)
	err := c.cc.Invoke(ctx, "/application.ApplicationFactory/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationFactoryClient) Delete(ctx context.Context, in *NameHolder, opts ...grpc.CallOption) (*DeletionResponse, error) {
	out := new(DeletionResponse)
	err := c.cc.Invoke(ctx, "/application.ApplicationFactory/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationFactoryClient) Rebuild(ctx context.Context, in *NameHolder, opts ...grpc.CallOption) (*ResponseBody, error) {
	out := new(ResponseBody)
	err := c.cc.Invoke(ctx, "/application.ApplicationFactory/Rebuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationFactoryClient) FetchLogs(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (*LogResponse, error) {
	out := new(LogResponse)
	err := c.cc.Invoke(ctx, "/application.ApplicationFactory/FetchLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApplicationFactoryServer is the server API for ApplicationFactory service.
type ApplicationFactoryServer interface {
	Create(context.Context, *RequestBody) (*ResponseBody, error)
	Delete(context.Context, *NameHolder) (*DeletionResponse, error)
	Rebuild(context.Context, *NameHolder) (*ResponseBody, error)
	FetchLogs(context.Context, *LogRequest) (*LogResponse, error)
}

// UnimplementedApplicationFactoryServer can be embedded to have forward compatible implementations.
type UnimplementedApplicationFactoryServer struct {
}

func (*UnimplementedApplicationFactoryServer) Create(ctx context.Context, req *RequestBody) (*ResponseBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedApplicationFactoryServer) Delete(ctx context.Context, req *NameHolder) (*DeletionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedApplicationFactoryServer) Rebuild(ctx context.Context, req *NameHolder) (*ResponseBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rebuild not implemented")
}
func (*UnimplementedApplicationFactoryServer) FetchLogs(ctx context.Context, req *LogRequest) (*LogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchLogs not implemented")
}

func RegisterApplicationFactoryServer(s *grpc.Server, srv ApplicationFactoryServer) {
	s.RegisterService(&_ApplicationFactory_serviceDesc, srv)
}

func _ApplicationFactory_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestBody)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationFactoryServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/application.ApplicationFactory/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationFactoryServer).Create(ctx, req.(*RequestBody))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationFactory_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameHolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationFactoryServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/application.ApplicationFactory/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationFactoryServer).Delete(ctx, req.(*NameHolder))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationFactory_Rebuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameHolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationFactoryServer).Rebuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/application.ApplicationFactory/Rebuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationFactoryServer).Rebuild(ctx, req.(*NameHolder))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationFactory_FetchLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationFactoryServer).FetchLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/application.ApplicationFactory/FetchLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationFactoryServer).FetchLogs(ctx, req.(*LogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApplicationFactory_serviceDesc = grpc.ServiceDesc{
	ServiceName: "application.ApplicationFactory",
	HandlerType: (*ApplicationFactoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ApplicationFactory_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ApplicationFactory_Delete_Handler,
		},
		{
			MethodName: "Rebuild",
			Handler:    _ApplicationFactory_Rebuild_Handler,
		},
		{
			MethodName: "FetchLogs",
			Handler:    _ApplicationFactory_FetchLogs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "application.proto",
}
